package com.app.web.controlador;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.app.web.entidad.Asignatura;
import com.app.web.servicio.AsignaturaServicio;

@Controller
public class AsignaturaControlador {

	@Autowired
	private AsignaturaServicio servicio;

	@GetMapping("/asignaturas")
	public String listarAsignaturas(Model modelo, String filtro) {

		if (filtro != null) {
			
			modelo.addAttribute("asignaturas", servicio.filtrarAsignaturaPorNombre(filtro));
			
		} else {
			
			modelo.addAttribute("asignaturas", servicio.listarTodasLasAsignaturas());

		}

		return "asignaturas";
	}

	@GetMapping("/asignaturas/nuevo")
	public String mostrarFormularioDeRegistrarAsignatura(Model modelo) {
		Asignatura asignatura = new Asignatura();
		modelo.addAttribute("asignatura", asignatura);
		return "crear_asignatura";
	}

	@PostMapping("/asignaturas")
	public String guardarAsignatura(@ModelAttribute("asignatura") Asignatura asignatura) {
		servicio.guardarAsignatura(asignatura);
		return "redirect:/asignaturas";
	}

	@GetMapping("/asignaturas/editar/{id}")
	public String mostrarFormularioDeEditar(@PathVariable Integer id, Model modelo) {
		modelo.addAttribute("asignatura", servicio.obtenerAsignaturaPorId(id));
		return "editar_asignatura";
	}

	@PostMapping("/asignaturas/{id}")
	public String actualizarAsignatura(@PathVariable Integer id, @ModelAttribute("asignatura") Asignatura asignatura,
			Model modelo) {
		Asignatura asignaturaExistente = servicio.obtenerAsignaturaPorId(id);
		asignaturaExistente.setId(id);
		asignaturaExistente.setNombre(asignatura.getNombre());
		asignaturaExistente.setNombreCompleto(asignatura.getNombreCompleto());
		asignaturaExistente.setDescripcion(asignatura.getDescripcion());
		asignaturaExistente.setAreaConocimiento(asignatura.getAreaConocimiento());
		asignaturaExistente.setCarrera(asignatura.getCarrera());
		asignaturaExistente.setCreditos(asignatura.getCreditos());
		asignaturaExistente.setContenidoTematico(asignatura.getContenidoTematico());
		asignaturaExistente.setSemestre(asignatura.getSemestre());
		asignaturaExistente.setProfesor(asignatura.getProfesor());

		servicio.actualizarAsignatura(asignaturaExistente);
		return "redirect:/asignaturas";
	}

	@GetMapping("/asignaturas/{id}")
	public String eliminarAsignatura(@PathVariable Integer id) {
		servicio.eliminarAsignatura(id);
		return "redirect:/asignaturas";
	}
}
